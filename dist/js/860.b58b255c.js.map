{"version":3,"file":"js/860.b58b255c.js","mappings":"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","sources":["webpack://vue-english-app/./src/views/LearnView.vue","webpack://vue-english-app/./src/views/LearnView.vue?c934"],"sourcesContent":["<template>\n  <div class=\"learn my-auto w-full\">\n    <transition name=\"fade-scale\" mode=\"out-in\">\n      <div v-if=\"!isLoaded\">\n        <Loader />\n      </div>\n      <div v-else-if=\"isLearnStarted\">\n        <Card\n          :words=\"words\"\n          :isTranslated=\"getSavedIsTranslated()\"\n          :activeWordIndex=\"getSavedCurrentIndex()\"\n          :isReusable=\"true\"\n          :theme=\"theme\"\n          @increaseWordIndex=\"changeWord\"\n          @saveWord=\"setSavedIsTranslated(true)\"\n          @onWordsOver=\"updateCard\"\n        />\n        <button\n          @click=\"finishLearning\"\n          class=\"px-6 py-4 mt-8 text-slate-50 font-semibold rounded transition-all duration-300\"\n          :class=\"`bg-${theme}-500 enabled:hover:bg-${theme}-600`\"\n        >\n          Вернуться к словам\n        </button>\n      </div>\n      <div v-else-if=\"words.length > 0\" class=\"text-left\">\n        <h1 class=\"mb-4 font-semibold text-lg\">\n          {{\n            isLearnedAtLeastOnce\n              ? 'Выберите слова, если уже выучили их:'\n              : 'Вы не знали перевод следующих слов:'\n          }}\n        </h1>\n        <ul\n          class=\"grid grid-cols-[repeat(auto-fill,_minmax(160px,_1fr))] gap-3 mb-6\"\n        >\n          <transition-group name=\"fade-scale-slowly\" mode=\"out-in\">\n            <li\n              v-for=\"(word, index) in wordsInLearning\"\n              :key=\"word.text\"\n              class=\"p-4 pr-8 bg-white rounded shadow-sm relative\"\n              :class=\"{\n                'cursor-pointer transition-colors hover:bg-cyan-50 select-none':\n                  isLearnedAtLeastOnce,\n                'hover:bg-emerald-50 bg-emerald-50': word.isChecked\n              }\"\n              @click=\"chooseWord(index)\"\n            >\n              <svg\n                v-if=\"word.isChecked\"\n                class=\"absolute right-2 bottom-2\"\n                width=\"20\"\n                height=\"20\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n                xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n                viewBox=\"0 0 512 512\"\n                style=\"enable-background: new 0 0 512 512\"\n                xml:space=\"preserve\"\n              >\n                <rect style=\"fill: #32bea6\" width=\"512\" height=\"512\" />\n                <polygon\n                  style=\"fill: #ffffff\"\n                  points=\"203.728,392.144 104.512,305.392 125.584,281.296 200.144,346.496 383.776,126.128 408.368,146.64 \"\n                />\n              </svg>\n              <p\n                class=\"font-semibold transition-colors\"\n                :class=\"`text-${theme}-600`\"\n              >\n                {{ word.text }}\n              </p>\n              <p>{{ word.translate }}</p>\n            </li>\n          </transition-group>\n        </ul>\n        <button\n          @click=\"saveLearnedWordList\"\n          v-if=\"isCheckedAtLeastOne\"\n          class=\"px-6 py-4 mr-2 text-slate-50 font-semibold rounded transition-colors duration-300\"\n          :class=\"`bg-${theme}-500 enabled:hover:bg-${theme}-600`\"\n        >\n          Я знаю эти слова\n        </button>\n        <h2 v-if=\"!isMinWordsTolearn\" class=\"mb-4 font-semibold text-lg\">\n          Вам нужно набрать хотя бы {{ minWordsToLearn }} слов для изучения\n        </h2>\n        <button\n          @click=\"startLearning\"\n          v-else\n          class=\"px-6 py-4 text-slate-50 font-semibold rounded transition-all duration-300\"\n          :class=\"`bg-${theme}-500 enabled:hover:bg-${theme}-600`\"\n        >\n          {{ startButtonText }}\n        </button>\n      </div>\n      <div v-else class=\"text-left\">\n        <h1 class=\"mb-4 font-semibold text-lg text-center\">\n          Список слов для изучения отсутствует\n        </h1>\n      </div>\n    </transition>\n  </div>\n</template>\n<script>\nimport Card from '@/components/Card.vue'\nimport Loader from '@/components/Loader.vue'\nimport { shuffleArray } from '@/helpers'\nimport { mapGetters, mapMutations } from 'vuex'\n\nexport default {\n  name: 'LearnView',\n  components: { Card, Loader },\n  data() {\n    return {\n      minWordsToLearn: 5,\n      isLearnStarted: false,\n      savedWordList: [],\n      isLoaded: false,\n      wordsInLearning: this.getSavedWordList()\n    }\n  },\n  computed: {\n    theme() {\n      return this.getTheme()\n    },\n    words() {\n      return this.getSavedWordList()\n    },\n    isLearnedAtLeastOnce() {\n      return this.getIsLearnedAtLeastOnce()\n    },\n    isWordListSavedToStorage() {\n      return localStorage.getItem('savedWordList')\n    },\n    isMinWordsTolearn() {\n      return this.words.length >= this.minWordsToLearn\n    },\n    startButtonText() {\n      return this.getSavedCurrentIndex() > 0\n        ? 'Продолжить изучение'\n        : 'Начать изучение'\n    },\n    isSavedWordsEnd() {\n      return this.words.length === 0\n    },\n    isCheckedAtLeastOne() {\n      return this.wordsInLearning.find((word) => word.isChecked)\n    }\n  },\n  watch: {\n    words() {\n      this.wordsInLearning = [...this.getSavedWordList()].map((word) => {\n        if (!word.isChecked) return { ...word, isChecked: false }\n      })\n    }\n  },\n  mounted() {\n    if (this.isWordListSavedToStorage) {\n      this.setSavedWordList(JSON.parse(localStorage.getItem('savedWordList')))\n      this.setSavedIndex(+localStorage.getItem('savedCurrentIndex') || 0)\n    }\n    if (this.isSavedWordsEnd) {\n      this.setIsLearnedAtLeastOnce(false)\n    }\n    this.isLoaded = true\n  },\n  beforeUnmount() {\n    this.setSavedIsTranslated(false)\n  },\n  methods: {\n    ...mapGetters([\n      'getSavedWordList',\n      'getSavedCurrentIndex',\n      'getSavedIsTranslated',\n      'getIsLearnedAtLeastOnce',\n      'getTheme'\n    ]),\n    ...mapMutations([\n      'increaseSavedIndex',\n      'setSavedIsTranslated',\n      'setSavedIndex',\n      'setSavedWordList',\n      'addToLearnedWordList',\n      'setIsLearnedAtLeastOnce'\n    ]),\n\n    changeWord() {\n      this.increaseSavedIndex()\n      this.setSavedIsTranslated(false)\n    },\n\n    startLearning() {\n      this.isLearnStarted = true\n\n      const newSavedWordList = shuffleArray(this.words)\n\n      this.setSavedWordList(newSavedWordList)\n    },\n\n    finishLearning() {\n      this.isLearnStarted = false\n      this.setIsLearnedAtLeastOnce(true)\n      this.setSavedIndex(0)\n    },\n\n    chooseWord(index) {\n      if (this.isLearnedAtLeastOnce) {\n        this.wordsInLearning[index].isChecked =\n          !this.wordsInLearning[index].isChecked\n      }\n    },\n\n    updateCard() {\n      const newSavedWordList = shuffleArray(this.words)\n\n      this.isLoaded = false\n      this.setSavedWordList(newSavedWordList)\n      this.setSavedIsTranslated(false)\n      this.setSavedIndex(0)\n      this.isLoaded = true\n    },\n\n    saveLearnedWordList() {\n      const checkedWords = this.wordsInLearning.filter((word) => word.isChecked)\n      const remainingWords = this.wordsInLearning.filter(\n        (word) => !word.isChecked\n      )\n\n      this.addToLearnedWordList(checkedWords)\n      this.setSavedWordList(remainingWords)\n    }\n  }\n}\n</script>\n","import { render } from \"./LearnView.vue?vue&type=template&id=213d85f0\"\nimport script from \"./LearnView.vue?vue&type=script&lang=js\"\nexport * from \"./LearnView.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"C:\\\\Users\\\\decka\\\\Desktop\\\\my-projects\\\\vue-english-app\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["class","width","height","xmlns","viewBox","style","_createElementVNode","points","_hoisted_9","_hoisted_10","_hoisted_14","_createElementBlock","_createVNode","_Transition","name","mode","$data","_hoisted_3","_component_Card","words","$options","isTranslated","_ctx","activeWordIndex","isReusable","theme","onIncreaseWordIndex","onSaveWord","onOnWordsOver","onClick","length","_toDisplayString","_TransitionGroup","_Fragment","_renderList","word","index","key","text","isChecked","_hoisted_11","translate","_hoisted_15","_hoisted_2","_component_Loader","components","Card","Loader","data","minWordsToLearn","isLearnStarted","savedWordList","isLoaded","wordsInLearning","this","getSavedWordList","computed","getTheme","isLearnedAtLeastOnce","getIsLearnedAtLeastOnce","isWordListSavedToStorage","localStorage","getItem","isMinWordsTolearn","startButtonText","getSavedCurrentIndex","isSavedWordsEnd","isCheckedAtLeastOne","find","watch","map","mounted","setSavedWordList","JSON","parse","setSavedIndex","setIsLearnedAtLeastOnce","beforeUnmount","setSavedIsTranslated","methods","mapGetters","mapMutations","changeWord","increaseSavedIndex","startLearning","newSavedWordList","shuffleArray","finishLearning","chooseWord","updateCard","saveLearnedWordList","checkedWords","filter","remainingWords","addToLearnedWordList","__exports__","render"],"sourceRoot":""}